{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","maxPages","Math","ceil","pages","isFirstPage","isLastPage","nextPage","prevPage","className","classNames","disabled","href","onClick","map","page","active","currpage","items","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","endVisibleItems","startVisibleItems","id","value","onChange","e","target","onItemsPerPageChange","htmlFor","item","i","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQC,GAC7BM,EAAQd,EAAW,EAAGW,GACtBI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAC7BM,EAAWR,EAAc,EACzBS,EAAWT,EAAc,EAM/B,OACE,qBAAIU,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,aACA,CAAEC,SAAUN,IAFd,SAKE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAI,WAAMb,GACV,gBAAeM,EACfQ,QAAS,kBAAMb,EAAaQ,IAL9B,oBAWDJ,EAAMU,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IACT,YACA,CACEM,OAAQD,IAAShB,IALvB,SASE,mBACE,UAAQ,WACRU,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBApCMI,EAoCgBF,KApCmBhB,GAC1DC,EAAaiB,GADS,IAACA,GAgCjB,SAMGF,KAdEA,MAmBT,oBAAIN,UAAWC,IACb,aACA,CAAEC,SAAUL,IAFd,SAKE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAI,WAAMb,GACV,gBAAeO,EACfO,QAAS,kBAAMb,EAAaO,IAL9B,wBCjEFW,EAAQ5B,EAFA,EACA,IAEXwB,KAAI,SAAApB,GAAC,qBAAYA,MAEPyB,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOrB,EAAP,KAAoBwB,EAApB,KAEMC,EAAkBH,EAAetB,EACjC0B,EAAoBD,EAAkBH,EAO5C,OACE,sBAAKZ,UAAU,YAAf,UACE,uDAEA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,yBACWV,EADX,YAEG0B,EAAoB,EACpB,MACCD,EAxBI,MAwB+BA,EACpC,OAzBK,GAoBR,OAUA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAON,EACPO,SAAU,SAACC,GAAD,OA1BS,SAACA,GAC5BP,GAAiBO,EAAEC,OAAOH,OAC1BJ,EAAe,GAwBUQ,CAAqBF,IALxC,UAOE,wBAAQF,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEZ,MApDM,GAqDNC,QAASuB,EACTtB,YAAaA,EACbC,aAAcuB,IAGhB,6BACGL,EAAMJ,KAAI,SAACmB,EAAMC,GAChB,OAAQA,GAAKT,GAAqBS,EAAIV,GACpC,oBAAI,UAAQ,OAAZ,SACGS,GADqBA,YChEpCE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ed94db42.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (currentPage: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const maxPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, maxPages);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === maxPages;\n  const nextPage = currentPage + 1;\n  const prevPage = currentPage - 1;\n\n  const handlePageClick = (currpage: number) => (currpage !== currentPage) && (\n    onPageChange(currpage)\n  );\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item ',\n        { disabled: isFirstPage },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={isFirstPage}\n          onClick={() => onPageChange(prevPage)}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          key={page}\n          className={classNames(\n            'page-item',\n            {\n              active: page === currentPage,\n            },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handlePageClick(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames(\n        'page-item ',\n        { disabled: isLastPage },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={isLastPage}\n          onClick={() => onPageChange(nextPage)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst start = 1;\nconst total = 42;\nconst items = getNumbers(start, total)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const endVisibleItems = itemsPerPage * currentPage;\n  const startVisibleItems = endVisibleItems - itemsPerPage;\n\n  const onItemsPerPageChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+e.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items `}\n        {startVisibleItems + 1}\n        {' - '}\n        {(endVisibleItems > total) ? total : endVisibleItems}\n        {' of '}\n        {total}\n        )\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(e) => onItemsPerPageChange(e)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {items.map((item, i) => {\n          return (i >= startVisibleItems && i < endVisibleItems) && (\n            <li data-cy=\"item\" key={item}>\n              {item}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}